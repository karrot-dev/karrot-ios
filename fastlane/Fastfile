default_platform :ios

platform :ios do

  before_all do
    setup_circle_ci
  end

  private_lane :update_version do
    infoPlist = "karrot-frontend/cordova/platforms/ios/Karrot Dev/Karrot Dev-Info.plist"
    bv = load_json(json_path: "build_version.json")
    puts "Set Version to #{bv["version"]}"
    # Update version from file
    set_info_plist_value(
      path: infoPlist,
      key: "CFBundleShortVersionString",
      value: bv["version"]
    )
    puts "Set Build version to #{bv["build"]}"
    # Update build version from file
    set_info_plist_value(
      path: infoPlist,
      key: "CFBundleVersion",
      value: bv["build"]
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    update_version

    match(
      username: ENV['IOS_APPLE_ID'],
      git_url: ENV['MATCH_GIT_REPO'],
      type: "appstore",
      readonly: true
    )
    pem(
      username: ENV['IOS_APPLE_ID'],
      save_private_key: true,
    )

    disable_automatic_code_signing(
      path: ENV['IOS_PROJECT']
    )

    build_app(
      workspace: ENV['IOS_WORKSPACE'],
      export_xcargs: "-allowProvisioningUpdates"
    )

    # enable_automatic_code_signing(
    #   path: ENV['IOS_PROJECT']
    # )

    upload_to_testflight(
      username: ENV['IOS_APPLE_ID'],
      skip_waiting_for_build_processing: true
    )
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    match(
      username: ENV['IOS_APPLE_ID'],
      git_url: ENV['MATCH_GIT_REPO'],
      type: "appstore",
      readonly: true
    )
    cordova(platform: 'ios')
    upload_to_app_store(
      ipa: ENV['CORDOVA_IOS_RELEASE_BUILD_PATH'],
      skip_waiting_for_build_processing: true
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

# Local Variables:
# mode: ruby
# End:
